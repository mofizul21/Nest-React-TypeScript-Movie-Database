{"ast":null,"code":"var _jsxFileName = \"D:\\\\nestJS\\\\movie-frontend\\\\src\\\\contexts\\\\auth0-context.tsx\";\nimport React, { Component, createContext, useContext } from 'react';\nimport createAuth0Client from '@auth0/auth0-spa-js';\nimport Auth0Client from '@auth0/auth0-spa-js';\n// create the context\nexport const Auth0Context = createContext(null);\nexport const useAuth0 = () => useContext(Auth0Context);\n// create a provider\nexport class Auth0Provider extends Component {\n  constructor(props) {\n    super(props);\n    this.config = {\n      domain: `${process.env.REACT_APP_AUTH0_DOMAIN}`,\n      client_id: `${process.env.REACT_APP_AUTH0_CLIENT_ID}`,\n      redirect_uri: window.location.origin\n    };\n\n    this.initializeAuth0 = async () => {\n      const auth0Client = await createAuth0Client(this.config);\n      this.setState({\n        auth0Client\n      }); // check to see if they have been redirected after login\n\n      if (window.location.search.includes('code=')) {\n        return this.handleRedirectCallback();\n      }\n\n      const isAuthenticated = await auth0Client.isAuthenticated();\n      const user = isAuthenticated ? await auth0Client.getUser() : null;\n      this.setState({\n        isLoading: false,\n        isAuthenticated,\n        user\n      });\n    };\n\n    this.handleRedirectCallback = async () => {\n      this.setState({\n        isLoading: true\n      });\n      await this.state.auth0Client.handleRedirectCallback();\n      const user = await this.state.auth0Client.getUser();\n      this.setState({\n        user,\n        isAuthenticated: true,\n        isLoading: false\n      });\n      window.history.replaceState({}, document.title, window.location.pathname);\n    };\n\n    this.state = {\n      isLoading: true,\n      isAuthenticated: false,\n      user: null,\n      auth0Client: Auth0Client\n    };\n  }\n\n  componentDidMount() {\n    this.initializeAuth0();\n  } // initialize the auth0 library\n\n\n  render() {\n    const _this$state = this.state,\n          auth0Client = _this$state.auth0Client,\n          isLoading = _this$state.isLoading,\n          isAuthenticated = _this$state.isAuthenticated,\n          user = _this$state.user;\n    const children = this.props.children;\n    const configObject = {\n      isLoading,\n      isAuthenticated,\n      user,\n      loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n      getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n      getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n      logout: (...p) => auth0Client.logout(...p)\n    };\n    return React.createElement(Auth0Context.Provider, {\n      value: configObject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, children);\n  }\n\n}","map":{"version":3,"sources":["D:/nestJS/movie-frontend/src/contexts/auth0-context.tsx"],"names":["React","Component","createContext","useContext","createAuth0Client","Auth0Client","Auth0Context","useAuth0","Auth0Provider","constructor","props","config","domain","process","env","REACT_APP_AUTH0_DOMAIN","client_id","REACT_APP_AUTH0_CLIENT_ID","redirect_uri","window","location","origin","initializeAuth0","auth0Client","setState","search","includes","handleRedirectCallback","isAuthenticated","user","getUser","isLoading","state","history","replaceState","document","title","pathname","componentDidMount","render","children","configObject","loginWithRedirect","p","getTokenSilently","getIdTokenClaims","logout"],"mappings":"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","sourcesContent":["import React, { Component, createContext, useContext } from 'react';\nimport createAuth0Client from '@auth0/auth0-spa-js';\nimport Auth0Client from '@auth0/auth0-spa-js';\n\n\ninterface ContextValueType {\n\tisAuthenticated?: boolean,\n\tuser?: any,\n\tisLoading?: boolean,\n\thandleRedirectCallback?: () => void,\n\tgetIdTokenClaims?: (...p: any) => any,\n\tloginWithRedirect?: (...p: any) => any,\n\tgetTokenSilently?: (...p: any) => any,\n\tlogout?: (...p: any) => any\n}\n\n\n// create the context\nexport const Auth0Context: any = createContext<ContextValueType | null>(null);\nexport const useAuth0: any = () => useContext(Auth0Context);\n\ninterface IState {\n\tauth0Client: any,\n\tisLoading: boolean,\n\tisAuthenticated: boolean,\n\tuser?: any;\n}\n\n// create a provider\nexport class Auth0Provider extends Component<{}, IState> {\n\tconstructor(props: any) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tisLoading: true,\n\t\t\tisAuthenticated: false,\n\t\t\tuser: null,\n\t\t\tauth0Client: Auth0Client,\n\t\t};\n\t}\n\n\tconfig: Auth0ClientOptions = {\n\t\tdomain: `${process.env.REACT_APP_AUTH0_DOMAIN}`,\n\t\tclient_id: `${process.env.REACT_APP_AUTH0_CLIENT_ID}`,\n\t\tredirect_uri: window.location.origin\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.initializeAuth0();\t\t\n\t}\n\n\t// initialize the auth0 library\n\tinitializeAuth0 = async () => {\n\t\tconst auth0Client = await createAuth0Client(this.config);\n\t\tthis.setState({ auth0Client });\n\n\t\t// check to see if they have been redirected after login\n\t\tif (window.location.search.includes('code=')) {\n\t\t\treturn this.handleRedirectCallback();\n\t\t}\n\n\t\tconst isAuthenticated = await auth0Client.isAuthenticated();\n\t\tconst user = isAuthenticated ? await auth0Client.getUser() : null;\n\t\tthis.setState({ isLoading: false, isAuthenticated, user });\n\t};\n\n\thandleRedirectCallback = async () => {\n\t\tthis.setState({ isLoading: true });\n\n\t\tawait this.state.auth0Client.handleRedirectCallback();\n\t\tconst user = await this.state.auth0Client.getUser();\n\n\t\tthis.setState({ user, isAuthenticated: true, isLoading: false });\n\t\twindow.history.replaceState({}, document.title, window.location.pathname);\n\t};\n\n\trender() {\n\t\tconst { auth0Client, isLoading, isAuthenticated, user } = this.state;\n\t\tconst { children } = this.props;\n\n\t\tconst configObject = {\n\t\t\tisLoading,\n\t\t\tisAuthenticated,\n\t\t\tuser,\n\t\t\tloginWithRedirect: (...p: any) => auth0Client.loginWithRedirect(...p),\n\t\t\tgetTokenSilently: (...p: any) => auth0Client.getTokenSilently(...p),\n\t\t\tgetIdTokenClaims: (...p: any) => auth0Client.getIdTokenClaims(...p),\n\t\t\tlogout: (...p: any) => auth0Client.logout(...p)\n\t\t};\n\n\t\treturn <Auth0Context.Provider value={configObject}>{children}</Auth0Context.Provider>;\n\t}\n}"]},"metadata":{},"sourceType":"module"}