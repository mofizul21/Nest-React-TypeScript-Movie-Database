{"ast":null,"code":"import _objectSpread from \"D:\\\\nestJS\\\\movie-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\nestJS\\\\movie-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\nestJS\\\\movie-frontend\\\\src\\\\components\\\\post\\\\Edit.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useAuth0 } from '../../contexts/auth0-context';\n\nfunction Edit() {\n  const _useAuth = useAuth0(),\n        getIdTokenClaims = _useAuth.getIdTokenClaims;\n\n  let history = useHistory();\n\n  let _useParams = useParams(),\n      postId = _useParams.postId;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        post = _useState2[0],\n        setPost = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        values = _useState4[0],\n        setValues = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        submitSuccess = _useState6[0],\n        setSubmitSuccess = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        loading = _useState8[0],\n        setLoading = _useState8[1];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/movie/movie/${postId}`);\n      const json = await response.json();\n      setPost(json);\n    };\n\n    fetchData();\n  }, [postId]);\n\n  const handleFormSubmission = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const submitSuccess = await submitForm();\n    setSubmitSuccess(submitSuccess);\n    setLoading(false);\n    setTimeout(() => {\n      history.push('/');\n    }, 1500);\n  };\n\n  const submitForm = async () => {\n    try {\n      const accessToken = await getIdTokenClaims();\n      const response = await fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/blog/edit?postID=${postId}`, {\n        method: \"put\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          \"authorization\": `Bearer ${accessToken.__raw}`\n        }),\n        body: JSON.stringify(values)\n      });\n      return response.ok;\n    } catch (ex) {\n      return false;\n    }\n  };\n\n  const setFormValues = formValues => {\n    setValues(_objectSpread({}, values, {}, formValues));\n  };\n\n  const handleInputChanges = e => {\n    setFormValues({\n      [e.currentTarget.id]: e.currentTarget.value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: 'page-wrapper',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, post && React.createElement(\"div\", {\n    className: \"col-md-12 form-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \" Edit Post  \"), submitSuccess && React.createElement(\"div\", {\n    className: \"alert alert-info\",\n    role: \"alert\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"The post has been edited successfully!\"), React.createElement(\"form\", {\n    id: \"create-post-form\",\n    onSubmit: handleFormSubmission,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \" Title \"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    defaultValue: post.title,\n    onChange: e => handleInputChanges(e),\n    name: \"title\",\n    className: \"form-control\",\n    placeholder: \"Enter title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \" Description \"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"description\",\n    defaultValue: post.description,\n    onChange: e => handleInputChanges(e),\n    name: \"description\",\n    className: \"form-control\",\n    placeholder: \"Enter Description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \" Write Content \"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"body\",\n    defaultValue: post.body,\n    onChange: e => handleInputChanges(e),\n    name: \"body\",\n    className: \"form-control\",\n    placeholder: \"Enter content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group col-md-4 pull-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Edit Post\"), loading && React.createElement(\"span\", {\n    className: \"fa fa-circle-o-notch fa-spin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })))));\n}\n\nexport default Edit;","map":{"version":3,"sources":["D:/nestJS/movie-frontend/src/components/post/Edit.tsx"],"names":["React","useState","useEffect","useHistory","useParams","useAuth0","Edit","getIdTokenClaims","history","postId","post","setPost","values","setValues","submitSuccess","setSubmitSuccess","loading","setLoading","fetchData","response","fetch","process","env","REACT_APP_SERVER_BASE_URL","json","handleFormSubmission","e","preventDefault","submitForm","setTimeout","push","accessToken","method","headers","Headers","Accept","__raw","body","JSON","stringify","ok","ex","setFormValues","formValues","handleInputChanges","currentTarget","id","value","title","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useAuth0 } from '../../contexts/auth0-context';\n\n\nfunction Edit(): JSX.Element {\n\n  const { getIdTokenClaims } = useAuth0();\n\n  let history = useHistory();\n  let { postId } = useParams();\n\n  interface IValues {\n    [key: string]: any;\n  }\n\n  const [post, setPost] = useState()\n  const [values, setValues] = useState<IValues>([]);\n  const [submitSuccess, setSubmitSuccess] = useState<boolean>(false)\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async (): Promise<void> => {\n      const response = await fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/movie/movie/${postId}`);\n      const json = await response.json();\n      setPost(json)    \n    }\n    fetchData();    \n  }, [postId]);\n\n  const handleFormSubmission = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n    e.preventDefault();\n    setLoading(true);\n\n    const submitSuccess: boolean = await submitForm();\n    setSubmitSuccess(submitSuccess);\n    setLoading(false);\n\n    setTimeout(() => {\n      history.push('/');\n    }, 1500);\n  }\n\n  const submitForm = async (): Promise<boolean> => {\n    try {\n      const accessToken = await getIdTokenClaims();\n      const response = await fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/blog/edit?postID=${postId}`, {\n        method: \"put\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          \"authorization\": `Bearer ${accessToken.__raw}`\n        }),\n        body: JSON.stringify(values)\n      });\n      return response.ok;      \n    } catch(ex) {\n      return false;\n    }\n  }\n\n  const setFormValues = (formValues: IValues) => {\n    setValues({...values, ...formValues})\n  }\n\n  const handleInputChanges = (e: React.FormEvent<HTMLInputElement>) => {\n    setFormValues({ [e.currentTarget.id]: e.currentTarget.value })\n  }\n\n  return (\n    <div className={'page-wrapper'}>\n    {post &&\n      <div className={\"col-md-12 form-wrapper\"}>\n        <h2> Edit Post  </h2>\n\n        {submitSuccess && (\n          <div className=\"alert alert-info\" role=\"alert\">\n            The post has been edited successfully!\n                        </div>\n        )}\n        <form id={\"create-post-form\"} onSubmit={handleFormSubmission} noValidate={true}>\n          <div className=\"form-group col-md-12\">\n            <label htmlFor=\"title\"> Title </label>\n            <input type=\"text\" id=\"title\" defaultValue={post.title} onChange={(e) => handleInputChanges(e)} name=\"title\" className=\"form-control\" placeholder=\"Enter title\" />\n          </div>\n\n          <div className=\"form-group col-md-12\">\n            <label htmlFor=\"description\"> Description </label>\n            <input type=\"text\" id=\"description\" defaultValue={post.description} onChange={(e) => handleInputChanges(e)} name=\"description\" className=\"form-control\" placeholder=\"Enter Description\" />\n          </div>\n\n          <div className=\"form-group col-md-12\">\n            <label htmlFor=\"body\"> Write Content </label>\n            <input type=\"text\" id=\"body\" defaultValue={post.body} onChange={(e) => handleInputChanges(e)} name=\"body\" className=\"form-control\" placeholder=\"Enter content\" />\n          </div>\n\n          <div className=\"form-group col-md-4 pull-right\">\n            <button className=\"btn btn-success\" type=\"submit\">\n              Edit Post\n            </button>\n            {loading &&\n              <span className=\"fa fa-circle-o-notch fa-spin\" />\n            }\n          </div>\n        </form>\n      </div>\n    }\n  </div>\n  )\n}\n\nexport default Edit;"]},"metadata":{},"sourceType":"module"}